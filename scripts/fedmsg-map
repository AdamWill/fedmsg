#!/usr/bin/env python
""" Utility to scan a fedmsg setup for port availability.

Reports what percentage of fedmsg endpoints are bound and ready.
"""

import base64
import collections
import socket
import sys


import fedmsg.config
config = fedmsg.config.load_config()

timeout = 0.1
expected = '/wAAAAAAAAABfw=='

active = collections.defaultdict(list)
inactive = collections.defaultdict(list)

for i, item in enumerate(config['endpoints'].items()):
    name, endpoints = item
    for endpoint in endpoints:
        if not endpoint.startswith('tcp://'):
            raise ValueError("Don't know how to deal with %r" % endpoint)
        endpoint = endpoint[len('tcp://'):].split(':')
        connection = None
        try:
            connection = socket.create_connection(endpoint, timeout)
            actual = base64.b64encode(connection.recv(10))
            if actual != expected:
                inactive[name].append((endpoint, "%r is not %r" % (actual, expected)))
                sys.stdout.write("F")
            else:
                active[name].append((endpoint, "all active"))
                sys.stdout.write(".")
        except socket.error as e:
            inactive[name].append((endpoint, str(e)))
            sys.stdout.write("F")
            if connection:
                connection.close()
        sys.stdout.flush()

print

header = " ".join([
    "name".center(29),
    "active".rjust(7),
    "inactive".rjust(8),
    "percent".rjust(7),
    "reason".center(30),
])
print
print header
print "-" * len(header)

active_n_total, inactive_n_total = 0, 0
for name in sorted(config['endpoints']):
    active_n = len(active[name])
    inactive_n = len(inactive[name])

    active_n_total += active_n
    inactive_n_total += inactive_n

    total = active_n + inactive_n
    reasons = set([reason for endpoint, reason in inactive[name]])

    print name.rjust(29),
    print str(active_n).rjust(7),
    print str(inactive_n).rjust(8),
    print ("%%%0.2f" % (100 * float(active_n) / total)).rjust(7),
    print ", ".join(reasons)

print "-" * len(header)

print "   total active:  %i" % active_n_total
print " total inactive:  %i" % inactive_n_total
print "        percent: %%%0.2f" % (
    100 * float(active_n_total) / (active_n_total + inactive_n_total))
